name: Diamond Dawn CI DEV

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Check formatting - frontent
        run: cd frontend && npm run check
      - name: Check formatting - frontent-admin
        run: cd frontend-admin && npm run check
      - name: Check formatting - smart-contracts
        run: cd smart-contracts && npm run check
  compile_and_run_tests:
    runs-on: ubuntu-latest
    needs:
      - check
    defaults:
      run:
        working-directory: ./smart-contracts
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm ci
      - name: Compile & Run test coverage
        run: npm run coverage
      - uses: 5monkeys/cobertura-action@master
        with:
          path: smart-contracts/coverage/cobertura-coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_coverage: 0
          fail_below_threshold: True
          show_line: True
          show_branch: True
          show_missing: True
          link_missing_lines: True
      - name: Run Slither
        uses: crytic/slither-action@v0.1.1
        continue-on-error: true
        id: slither
        with:
          node-version: 16
          sarif: results.sarif
      # - name: Generate Documentation
      #   uses: mattnotmitt/doxygen-action@v1.9.4
      #   with:
      #       working-directory: 'contracts/'
      #       doxyfile-path: 'docs/'
      # - name: Upload SARIF file
      #   uses: github/codeql-action/upload-sarif@v2
      #   with:
      #     sarif_file: ${{ steps.slither.outputs.sarif }}
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs:
      - check
      - compile_and_run_tests
    env:
      HARDHAT_NETWORK: goerli
      DEV_DEPLOYMENT_GOERLI_URL: ${{ secrets.DEV_DEPLOYMENT_GOERLI_URL }}
      DEV_DEPLOYMENT_MONGODB_URI: ${{ secrets.DEV_DEPLOYMENT_MONGODB_URI }}
      DEV_DEPLOYMENT_DEPLOYER_PRIVATE_KEY: ${{ secrets.DEV_DEPLOYMENT_DEPLOYER_PRIVATE_KEY }}
      DEV_DEPLOYMENT_ETHERSCAN_API_KEY: ${{ secrets.DEV_DEPLOYMENT_ETHERSCAN_API_KEY }}
      DEV_DEPLOYMENT_ADMINS: ${{ secrets.DEV_DEPLOYMENT_ADMINS }}
      DEV_DEPLOYMENT_SIGNER_PUBLIC_KEY: ${{ secrets.DEV_DEPLOYMENT_SIGNER_PUBLIC_KEY }}
    defaults:
      run:
        working-directory: ./smart-contracts
    steps:
      -   uses: actions/checkout@v2
      -   uses: actions/setup-node@v2
          with:
            node-version: '16'
      -   name: Install dependencies
          run: npm ci
      -   name: Deploy smart contracts
          run: npm run build
